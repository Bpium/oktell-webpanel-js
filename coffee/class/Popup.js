// Generated by CoffeeScript 1.6.2
var Popup;

Popup = (function() {
  Popup.prototype.logGroup = 'Popup';

  function Popup(popupEl, oktell, ringtone) {
    var _this = this;

    this.el = popupEl;
    this.ringtone = ringtone;
    this.absContainer = this.el.find('.b_content');
    this.abonentEl = this.absContainer.find('.b_abonent').remove();
    this.answerActive = false;
    this.answerButttonEl = this.el.find('.j_answer');
    this.puckupEl = this.el.find('.j_pickup');
    this.el.find('.j_abort_action').bind('click', function() {
      _this.hide();
      return oktell.endCall();
    });
    this.el.find('.j_answer').bind('click', function() {
      _this.hide();
      return oktell.answer();
    });
    this.el.find('.j_close_action').bind('click', function() {
      return _this.hide();
    });
    this.el.find('i.o_close').bind('click', function() {
      return _this.hide();
    });
    oktell.on('ringStart', function(abonents) {
      _this.playRingtone(true);
      _this.setAbonents(abonents);
      _this.answerButtonVisible(oktell.webphoneIsActive());
      return _this.show();
    });
    oktell.on('ringStop', function() {
      _this.playRingtone(false);
      return _this.hide();
    });
  }

  Popup.prototype.playRingtone = function(play) {
    if (this.ringtone) {
      if (play) {
        this.ringtone.currentTime = 0;
        return this.ringtone.play();
      } else {
        return this.ringtone.pause();
      }
    }
  };

  Popup.prototype.show = function(abonents) {
    this.log('Popup show! ', abonents);
    return this.el.fadeIn(200);
  };

  Popup.prototype.hide = function() {
    return this.el.fadeOut(200);
  };

  Popup.prototype.setAbonents = function(abonents) {
    var _this = this;

    this.absContainer.empty();
    return $.each(abonents, function(i, abonent) {
      var el, name, phone;

      phone = abonent.phone.toString();
      name = abonent.name.toString() || phone;
      if (name === phone) {
        phone = '';
      }
      el = _this.abonentEl.clone();
      el.find('span:first').text(name);
      el.find('span:last').text(phone);
      return _this.absContainer.append(el);
    });
  };

  Popup.prototype.answerButtonVisible = function(val) {
    if (val) {
      this.answerActive = true;
      this.answerButttonEl.show();
      this.puckupEl.hide();
    } else {
      this.answerActive = false;
      this.answerButttonEl.hide();
      this.puckupEl.show();
    }
    return this.answerActive;
  };

  Popup.prototype.setCallbacks = function(onAnswer, onTerminate) {
    this.onAnswer = onAnswer;
    return this.onTerminate = onTerminate;
  };

  return Popup;

})();
