// Generated by CoffeeScript 1.8.0
(function() {
  module.exports = function(grunt) {
    return grunt.registerTask('insertfilesasvars', 'Replace matched string by file', function() {
      var cf, conf, config, f, fName, fNewName, file, files, fs, i, k, originalFileNames, rAll, replaceStr, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
      config = grunt.config.get(this.name);
      fs = require('fs');
      file = fs.readFileSync(config.target).toString();
      files = config.files;
      originalFileNames = config.originalFileNames || {};
      if (!files) {
        files = [];
        rAll = new RegExp(config.regexFind.source, 'gm');
        _ref = file.match(rAll);
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          f = _ref[_i];
          files.push((_ref1 = f.match(config.regexFind)) != null ? _ref1[1] : void 0);
        }
        for (i = _j = 0, _len1 = files.length; _j < _len1; i = ++_j) {
          f = files[i];
          files[i] = (f[0] === '/' ? f.substr(1) : f);
        }
        if (config.htmlminTaskName) {
          conf = grunt.config.get('htmlmin');
          cf = {};
          for (i = _k = 0, _len2 = files.length; _k < _len2; i = ++_k) {
            f = files[i];
            fName = f.split('/')[f.split('/').length - 1];
            fNewName = 'temp/' + fName.replace('.', '_' + Date.now() + '.');
            cf[fNewName] = f;
            originalFileNames[f] = fNewName;
          }
          conf[config.htmlminTaskName].files = cf;
          grunt.config('htmlmin', conf);
          grunt.task.run('htmlmin:' + config.htmlminTaskName);
          config.files = files;
          config.originalFileNames = originalFileNames;
          grunt.config(this.name, config);
          grunt.task.run('insertfilesasvars');
          return;
        }
      }
      replaceStr = '{';
      for (k in originalFileNames) {
        f = originalFileNames[k];
        replaceStr += f ? "'" + k + "':'" + fs.readFileSync(f).toString().replace(/'/g, "\\'") + "', " : void 0;
      }
      replaceStr += '}';
      return fs.writeFileSync(config.dest, file.replace(config.find, config.replace + replaceStr));
    });
  };

}).call(this);
